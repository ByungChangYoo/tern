package org.ternlang.parse;

public interface TextCategory {   
   short[] INDEX = {
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x4000, 0x4000, 0x0000, 0x0000, 0x4000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x4000, 0x0000, 0x0860, 0x0000, 0x0100, 0x0000, 0x0000, 0x0820,
   0x0000, 0x0000, 0x0000, 0x0200, 0x0000, 0x0200, 0x0080, 0x0000,
   0x001e, 0x001e, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016, 0x0016,
   0x0016, 0x0016, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0015, 0x0015, 0x0015, 0x1015, 0x2015, 0x1015, 0x0011,
   0x0011, 0x0011, 0x0011, 0x0011, 0x1011, 0x0011, 0x0011, 0x0011,
   0x0011, 0x0011, 0x0011, 0x0011, 0x0011, 0x0811, 0x0011, 0x0011,
   0x0011, 0x0011, 0x0011, 0x0000, 0x0c00, 0x0000, 0x0000, 0x0010,
   0x0060, 0x0015, 0x0815, 0x0015, 0x1015, 0x2015, 0x1815, 0x0011,
   0x0011, 0x0011, 0x0011, 0x0011, 0x1011, 0x0011, 0x0811, 0x0011,
   0x0011, 0x0011, 0x0811, 0x0011, 0x0811, 0x0811, 0x0011, 0x0011,
   0x0011, 0x0011, 0x0011, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
   0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000};

   short NONE = 0x0000;
   short LETTER = 0x0001; // a to z or A to Z
   short DIGIT = 0x0002; // 0 to 9
   short HEXADECIMAL = 0x0004; // 0 to f
   short BINARY = 0x0008; // 1 or 0
   short IDENTIFIER = 0x0010; // a to z
   short QUOTE = 0x0020; // ' or " or `
   short TEMPLATE = 0x0040; // ` or "
   short PERIOD = 0x0080; // .
   short DOLLAR = 0x0100; //  $
   short SIGN = 0x0200;   // - or +
   short ESCAPE = 0x0400; // \
   short SPECIAL = 0x0800; // special escapes
   short SUFFIX = 0x1000; // d or f or l
   short EXPONENT = 0x2000; // e to E
   short SPACE = 0x4000;
}