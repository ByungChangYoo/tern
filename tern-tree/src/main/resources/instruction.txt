# instructions used to assemble the execution tree

decimal = tern.tree.literal.NumberLiteral
hexidecimal = tern.tree.literal.NumberLiteral
binary = tern.tree.literal.NumberLiteral
boolean = tern.tree.literal.BooleanLiteral
identifier = tern.tree.literal.TextLiteral
template = tern.tree.template.TextTemplate
constructor = tern.tree.literal.TextLiteral
class = tern.tree.literal.TextLiteral
module = tern.tree.literal.TextLiteral
type = tern.tree.literal.TextLiteral
text = tern.tree.literal.TextLiteral
null = tern.tree.literal.NullLiteral
number = tern.tree.operation.SignedNumber
this = tern.tree.This
super = tern.tree.Super
argument = tern.tree.Argument
range = tern.tree.collection.Range
cast = tern.tree.Cast
variable = tern.tree.variable.Variable
variable-reference = tern.tree.variable.VariableReference
function-argument-list = tern.tree.ArgumentList
function-invocation = tern.tree.function.FunctionInvocation
function-curry = tern.tree.function.FunctionCurry
function-handle = tern.tree.function.FunctionHandle
argument-list = tern.tree.ArgumentList
reference = tern.tree.reference.ReferenceNavigation
reference-invocation = tern.tree.reference.ReferenceInvocation
reference-navigation = tern.tree.reference.ReferenceNavigation
reference-part = tern.tree.reference.ReferencePart
reference-variable = tern.tree.reference.ReferencePart
reference-property = tern.tree.reference.ReferenceProperty
calculation-list = tern.tree.operation.CalculationList
calculation-operator = tern.tree.operation.CalculationOperator
calculation-operand = tern.tree.operation.CalculationOperand
comparison = tern.tree.condition.Comparison
combination = tern.tree.condition.Combination
postfix-increment = tern.tree.operation.PostfixIncrement
postfix-decrement = tern.tree.operation.PostfixDecrement
prefix-increment = tern.tree.operation.PrefixIncrement
prefix-decrement = tern.tree.operation.PrefixDecrement
prefix-operation = tern.tree.operation.PrefixOperation
choice = tern.tree.condition.Choice
null-coalesce = tern.tree.condition.NullCoalesce
assignment = tern.tree.operation.Assignment
assignment-list = tern.tree.operation.AssignmentList
type-reference = tern.tree.reference.TypeReference
type-reference-part = tern.tree.reference.TypeReferencePart
array-reference = tern.tree.reference.ArrayReference
list-reference = tern.tree.reference.ListReference
set-reference = tern.tree.reference.SetReference
map-reference = tern.tree.reference.MapReference
function-reference = tern.tree.reference.FunctionReference
generic-reference = tern.tree.reference.GenericReference
generic-argument = tern.tree.reference.GenericArgument
generic-argument-list = tern.tree.reference.GenericArgumentList
construct-list = tern.tree.construct.ConstructList
construct-array = tern.tree.construct.ConstructArray
construct-object = tern.tree.construct.ConstructObject
construct-map = tern.tree.construct.ConstructMap
construct-set = tern.tree.construct.ConstructSet
list-entry-data = tern.tree.construct.ElementData
list-entry-list = tern.tree.ArgumentList
list-entry = tern.tree.Argument
set-entry-data = tern.tree.construct.ElementData
set-entry-list = tern.tree.ArgumentList
set-entry = tern.tree.Argument
map-entry-data = tern.tree.construct.MapEntryData
map-entry = tern.tree.construct.MapEntry
map-key = tern.tree.construct.MapKey
collection-index = tern.tree.collection.CollectionIndex
global = tern.tree.Global
global-statement = tern.tree.DeclarationStatement
declaration = tern.tree.Declaration
declaration-modifier = tern.tree.Modifier
declaration-statement = tern.tree.DeclarationStatement
assignment-statement = tern.tree.operation.AssignmentStatement
assignment-list-statement = tern.tree.operation.AssignmentListStatement
expression-statement = tern.tree.ExpressionStatement
synchronized-statement = tern.tree.SynchronizedStatement
terminal-statement = tern.tree.EmptyStatement
empty-statement = tern.tree.EmptyStatement
compound-statement = tern.tree.CompoundStatement
if-statement = tern.tree.condition.IfStatement
unless-statement = tern.tree.condition.UnlessStatement
break-statement = tern.tree.BreakStatement
continue-statement = tern.tree.ContinueStatement
return-statement = tern.tree.ReturnStatement
yield-statement = tern.tree.resume.YieldStatement
await-declaration = tern.tree.resume.AwaitDeclaration
await-statement = tern.tree.resume.AwaitStatement
await-assignment-statement = tern.tree.resume.AwaitStatement
await-declaration-statement = tern.tree.resume.AwaitStatement
await-return-statement = tern.tree.resume.AwaitReturnStatement
debug-statement = tern.tree.DebugStatement
assert-statement = tern.tree.AssertStatement
until-statement = tern.tree.condition.UntilStatement
while-statement = tern.tree.condition.WhileStatement
for-assignment-list = tern.tree.Expression
for-statement = tern.tree.condition.ForStatement
for-in-declaration = tern.tree.Declaration
for-in-statement = tern.tree.condition.ForInStatement
loop-statement = tern.tree.condition.LoopStatement
switch-statement = tern.tree.condition.SwitchStatement
switch-case = tern.tree.condition.ValueCase
switch-default = tern.tree.condition.DefaultCase
match-statement = tern.tree.condition.MatchStatement
match-case = tern.tree.condition.ValueCase
match-default = tern.tree.condition.DefaultCase
type-constraint = tern.tree.constraint.TypeConstraint
class-constraint = tern.tree.constraint.ClassConstraint
trait-constraint = tern.tree.constraint.TraitConstraint
variable-argument = tern.tree.Modifier
parameter-modifier = tern.tree.Modifier
parameter-modifier-list = tern.tree.ModifierList
parameter-declaration = tern.tree.function.ParameterDeclaration
parameter-list = tern.tree.function.ParameterList
parameter-blank = tern.tree.function.ParameterBlank
closure-modifier = tern.tree.Modifier
closure-modifier-list = tern.tree.ModifierList
closure-parameter-list = tern.tree.closure.ClosureParameterList
closure = tern.tree.closure.Closure
throw-statement = tern.tree.ThrowStatement
catch-block = tern.tree.CatchBlock
catch-block-list = tern.tree.CatchBlockList
try-statement = tern.tree.TryStatement
generic-parameter = tern.tree.constraint.GenericParameter
generic-parameter-list = tern.tree.constraint.GenericParameterList
alias-name = tern.tree.constraint.AliasName
alias-hierarchy = tern.tree.define.AliasHierarchy
alias-definition = tern.tree.define.AliasDefinition
trait-name = tern.tree.constraint.TraitName
trait-hierarchy = tern.tree.define.TraitHierarchy
trait-constant = tern.tree.define.TraitConstant
trait-definition = tern.tree.define.TraitDefinition
trait-function = tern.tree.define.TraitFunction
enum-name = tern.tree.constraint.EnumName
enum-key = tern.tree.define.EnumKey
enum-hierarchy = tern.tree.define.EnumHierarchy
enum-field-declaration = tern.tree.define.MemberFieldDeclaration
enum-field = tern.tree.define.MemberField
enum-function = tern.tree.define.MemberFunction
enum-definition = tern.tree.define.EnumDefinition
enum-constructor = tern.tree.define.EnumConstructor
enum-value = tern.tree.define.EnumValue
enum-list = tern.tree.define.EnumList
class-name = tern.tree.constraint.ClassName
class-hierarchy = tern.tree.define.ClassHierarchy
class-definition = tern.tree.define.ClassDefinition
class-field-declaration = tern.tree.define.MemberFieldDeclaration
class-field = tern.tree.define.MemberField
class-function = tern.tree.define.MemberFunction
class-constructor = tern.tree.define.ClassConstructor
abstract-class-name = tern.tree.define.AbstractClassName
abstract-class-definition = tern.tree.define.AbstractClassDefinition
inner-alias-definition = tern.tree.define.InnerTypeDefinition
inner-class-definition = tern.tree.define.InnerTypeDefinition
inner-enum-definition = tern.tree.define.InnerTypeDefinition
inner-trait-definition = tern.tree.define.InnerTypeDefinition
inner-abstract-class-definition = tern.tree.define.InnerTypeDefinition
annotation-name = tern.tree.annotation.AnnotationName
annotation-list = tern.tree.annotation.AnnotationList
annotation-declaration = tern.tree.annotation.AnnotationDeclaration
field-modifier = tern.tree.Modifier
field-modifier-list = tern.tree.ModifierList
function-name = tern.tree.constraint.FunctionName
function-modifier = tern.tree.Modifier
function-modifier-list = tern.tree.ModifierList
access-modifier = tern.tree.Modifier
access-modifier-list = tern.tree.ModifierList
super-constructor = tern.tree.define.SuperConstructor
this-constructor = tern.tree.define.ThisConstructor
expression = tern.tree.Expression
wild-qualifier = tern.tree.WildQualifier
full-qualifier = tern.tree.FullQualifier
import = tern.tree.Import
import-list = tern.tree.ImportList
import-static = tern.tree.ImportStatic
module-name = tern.tree.define.ModuleName
module-property = tern.tree.define.ModuleProperty
module-declaration = tern.tree.define.ModuleDeclaration
module-modifier = tern.tree.Modifier
module-modifier-list = tern.tree.ModifierList
module-function = tern.tree.define.ModuleFunction
module-import = tern.tree.define.ModuleStatement
module-statement = tern.tree.define.ModuleStatement
module-definition = tern.tree.define.ModuleDefinition
script-modifier = tern.tree.Modifier
script-modifier-list = tern.tree.ModifierList
script-function = tern.tree.script.ScriptFunction
script-package = tern.tree.script.ScriptPackage
script = tern.tree.script.Script
